LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY if_else_tb IS
END if_else_tb;
 
ARCHITECTURE behavior OF if_else_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT if_else
    PORT(
         A : IN  std_logic;
         B : IN  std_logic;
         C : IN  std_logic;
         D : IN  std_logic;
         sel : IN  std_logic_vector(2 downto 0);
         Y : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic := '0';
   signal B : std_logic := '0';
   signal C : std_logic := '0';
   signal D : std_logic := '0';
   signal sel : std_logic_vector(2 downto 0) := (others => '0');

 	--Outputs
   signal Y : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
   
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: if_else PORT MAP (
          A => A,
          B => B,
          C => C,
          D => D,
          sel => sel,
          Y => Y
        );

   -- Clock process definitions
  

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	

    
	  

      -- insert stimulus here 
	  A <= '1';
	  B <= '0';
	  C <= '1';
	  D <= '0';
	  sel <= "001";
	  wait for 100 ns;
	  sel <= "010";
	  wait for 100 ns;
	  sel <= "100";
	  wait for 100 ns;
	  sel <= "000";

      wait;
   end process;

END;


if else test batch



LIBRARY ieee;
USE ieee.std_logic_1164.ALL;
 
-- Uncomment the following library declaration if using
-- arithmetic functions with Signed or Unsigned values
--USE ieee.numeric_std.ALL;
 
ENTITY if_else_tb IS
END if_else_tb;
 
ARCHITECTURE behavior OF if_else_tb IS 
 
    -- Component Declaration for the Unit Under Test (UUT)
 
    COMPONENT if_else
    PORT(
         A : IN  std_logic;
         B : IN  std_logic;
         C : IN  std_logic;
         D : IN  std_logic;
         sel : IN  std_logic_vector(2 downto 0);
         Y : OUT  std_logic
        );
    END COMPONENT;
    

   --Inputs
   signal A : std_logic := '0';
   signal B : std_logic := '0';
   signal C : std_logic := '0';
   signal D : std_logic := '0';
   signal sel : std_logic_vector(2 downto 0) := (others => '0');

 	--Outputs
   signal Y : std_logic;
   -- No clocks detected in port list. Replace <clock> below with 
   -- appropriate port name 
 
   
BEGIN
 
	-- Instantiate the Unit Under Test (UUT)
   uut: if_else PORT MAP (
          A => A,
          B => B,
          C => C,
          D => D,
          sel => sel,
          Y => Y
        );

   -- Clock process definitions
  

   -- Stimulus process
   stim_proc: process
   begin		
      -- hold reset state for 100 ns.
      wait for 100 ns;	

    
	  

      -- insert stimulus here 
	  A <= '1';
	  B <= '0';
	  C <= '1';
	  D <= '0';
	  sel <= "001";
	  wait for 100 ns;
	  sel <= "010";
	  wait for 100 ns;
	  sel <= "100";
	  wait for 100 ns;
	  sel <= "000";

      wait;
   end process;

END;
